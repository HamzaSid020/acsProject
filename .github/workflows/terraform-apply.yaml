name: Terraform Apply on Commit

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Configure AWS credentials using GitHub Secrets
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1
        env:
          ACTIONS_STEP_DEBUG: true

      # Set up Terraform CLI
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      # Network Directory Terraform Execution
      - name: Terraform Init in Network Folder
        working-directory: ./Network
        run: terraform init

      - name: Terraform Plan in Network Folder
        working-directory: ./Network
        run: terraform plan -out=tfplan_network

      - name: Check Network Plan for Deletions
        id: check_deletion
        run: |
          # Ensure the tfplan file exists
          if [ ! -f ./Network/tfplan_network ]; then
            echo "Network plan file not found, skipping deletion check."
            exit 1
          fi

          # Output the contents of the plan file for debugging purposes
          echo "Contents of the Network plan file:"
          cat ./Network/tfplan_network

          # Check if there are destroy actions in the network plan
          terraform show -json ./Network/tfplan_network | jq '.resource_changes[] | select(.change.actions | index("destroy"))' > destroyed_network_resources.json

          # Check if the destroyed resources file is empty or not
          if [[ -s destroyed_network_resources.json ]]; then
            echo "Network has resources to destroy, applying webserver resources first."
            echo "true" >> $GITHUB_ENV
          else
            echo "false" >> $GITHUB_ENV
          fi

      # Webserver Directory Terraform Execution
      - name: Terraform Init in Webserver Folder
        working-directory: ./Webserver
        run: terraform init

      - name: Terraform Plan in Webserver Folder
        working-directory: ./Webserver
        run: terraform plan -out=tfplan_webserver

      - name: Apply Webserver Resources First (if needed)
        if: env.true == 'true'
        working-directory: ./Webserver
        run: terraform apply -auto-approve

      # Network Directory Apply based on deletion check
      - name: Apply Network Resources
        if: env.true == 'false'
        working-directory: ./Network
        run: terraform apply -auto-approve

      - name: Apply Network Resources (if deletion needed)
        if: env.true == 'true'
        working-directory: ./Network
        run: terraform apply -auto-approve
